// Полезные команды GITHUB

clear // очистка окна терминала

ls // просмотр что содержит текущая папка в которой Вы находитесь на данный момент
cd "название папки" // переходит из текущей папки в "название папки"

git branch // какие ветки существуют в нашем проекте и в какой ветке мы сейчас находимся (*)
git checkout master // Перемещение из текущей ветки в векту master
git checkout -b first // создаем и переходим на новую ветку под названием first


touch 'название.txt' // создание файла 'название.txt' в текущем месте
vim 'название.txt' // редактирование файла 'название.txt' => нажмите 'I' чтобы перейти в интерактивный режим и начать редактировать файд -> Нажимаем "Esc" -> Пишем без ковычек ->':wq' -> Нажимаем "Enter"
cat 'название.txt' // просмотр содержимого в файле 'название.txt'

git status // отображает состояние файлов которые изменились (красным MODIFIED изменились или КРАСНЫМ название файлв - не отслеживаются изменение / зеленым (НОВЫЙ файл/ измененный файл, который мы добавили для отслеживания)
git add . // добавление файлов для ослеживания
git commit -m "Add: ********" // Комментарий к внесенным изменениям 
git branch -M master // Изменения мы перенесли в ветки и переименновали ее в название "master"
git remote //позволяет создавать, просматривать и удалять подключения к другим репозиториям

git push // отправление изменений в удаленный репозиторий.
git push --set-upstream origin first // связываем ветку first с удаленным репозиторием
git push --force // 
git merge master// Слияние текущей ветки с данными которые находятся на ветку master 
git rebase master //
git rebase --continue //

git config --local --list // какие конфигу у нас установлены локально
